"use strict";export const validate = validate10;export default validate10;const schema11 = {"type":"object","oneOf":[{"$ref":"#/$defs/Species"},{"$ref":"#/$defs/Role"}],"$defs":{"Species":{"type":"object","additionalProperties":false,"properties":{"type":{"const":"species"},"species":{"type":"object","additionalProperties":false,"properties":{"name":{"type":"string"},"changes":{"$ref":"#/$defs/Changes"}},"required":["name","changes"]}},"required":["type","species"]},"Changes":{"type":"object","additionalProperties":false,"properties":{"model":{"$ref":"#/$defs/Model"},"steps":{"type":"array","items":{"$ref":"#/$defs/Step"}}}},"Model":{"type":"object","additionalProperties":false,"properties":{"name":{"type":"string"},"level":{"type":"integer"},"rank":{"$ref":"#/$defs/Rank"},"species":{"enum":["beast","construct","demon","elemental","humanoid","monster","plant","undead"]},"attributes":{"type":"object","additionalProperties":false,"properties":{"dex":{"$ref":"#/$defs/AttributeDice"},"ins":{"$ref":"#/$defs/AttributeDice"},"mig":{"$ref":"#/$defs/AttributeDice"},"wlp":{"$ref":"#/$defs/AttributeDice"}}},"bonuses":{"type":"object","additionalProperties":false,"properties":{"hp":{"type":"integer"},"mp":{"type":"integer"},"def":{"type":"integer"},"mDef":{"type":"integer"},"init":{"type":"integer"},"accuracy":{"type":"integer"},"magic":{"type":"integer"}}},"affinities":{"type":"object","additionalProperties":false,"properties":{"physical":{"$ref":"#/$defs/Affinity"},"air":{"$ref":"#/$defs/Affinity"},"bolt":{"$ref":"#/$defs/Affinity"},"dark":{"$ref":"#/$defs/Affinity"},"earth":{"$ref":"#/$defs/Affinity"},"fire":{"$ref":"#/$defs/Affinity"},"ice":{"$ref":"#/$defs/Affinity"},"light":{"$ref":"#/$defs/Affinity"},"poison":{"$ref":"#/$defs/Affinity"}}},"statusImmunities":{"type":"object","additionalProperties":false,"properties":{"dazed":{"type":"boolean"},"shaken":{"type":"boolean"},"slow":{"type":"boolean"},"weak":{"type":"boolean"},"enraged":{"type":"boolean"},"poisoned":{"type":"boolean"}}},"attacks":{"type":"object","additionalProperties":false,"patternProperties":{".+":{"$ref":"#/$defs/Attack"}}},"actions":{"type":"object","additionalProperties":false,"patternProperties":{".+":{"$ref":"#/$defs/Action"}}},"spells":{"type":"object","additionalProperties":false,"patternProperties":{".+":{"$ref":"#/$defs/Spell"}}},"rules":{"type":"object","additionalProperties":false,"patternProperties":{".+":{"$ref":"#/$defs/Rule"}}}}},"AttributeDice":{"enum":["d6","d8","d10","d12"]},"Affinity":{"enum":["vul","","res","imm","abs"]},"DamageType":{"enum":["physical","air","bolt","dark","earth","fire","ice","light","poison"]},"Rank":{"enum":["soldier","elite","champion1","champion2","champion3","champion4","champion5","champion6"]},"Attack":{"type":"object","additionalProperties":false,"properties":{"name":{"type":"string"},"baseDamage":{"type":"integer"},"range":{"enum":["melee","ranged"]},"attributes":{"$ref":"#/$defs/Attributes"},"damageType":{"$ref":"#/$defs/DamageType"},"targetDefense":{"enum":["def","mDef"]},"special":{"type":"array","items":{"type":"string"}}},"required":["name","baseDamage"]},"Action":{"type":"object","additionalProperties":false,"properties":{"name":{"type":"string"},"summary":{"type":"string"},"description":{"type":"string"}},"required":["name","summary","description"]},"Spell":{"type":"object","additionalProperties":false,"properties":{"name":{"type":"string"},"summary":{"type":"string"},"cost":{"type":"integer"},"target":{"enum":["self","single","upToThree","special"]},"costType":{"enum":["total","perTarget"]},"duration":{"enum":["instant","scene"]},"opportunity":{"type":"string"},"offensive":{"type":"object","additionalProperties":false,"properties":{"attributes":{"$ref":"#/$defs/Attributes"},"accuracy":{"type":"integer"},"damage":{"type":"object","additionalProperties":false,"properties":{"base":{"type":"integer"},"type":{"$ref":"#/$defs/DamageType"}},"required":["base","type"]}},"required":["attributes","accuracy"]}},"required":["name","summary","cost","costType","target","duration"]},"Rule":{"type":"object","additionalProperties":false,"properties":{"name":{"type":"string"},"description":{"type":"string"},"summary":{"type":"string"}},"required":["name","description"]},"Attributes":{"type":"array","items":{"$ref":"#/$defs/AttributeDice"},"minItems":2,"maxItems":2},"Step":{"anyOf":[{"$ref":"#/$defs/AssignSpeciesVulnerability"}]},"AssignSpeciesVulnerability":{"type":"object","additionalProperties":false,"properties":{"type":{"const":"AssignSpeciesVulnerability"},"options":{"type":"array","items":{"$ref":"#/$defs/DamageType"}}},"required":["type"]},"AssignImmunity":{"type":"object","additionalProperties":false,"properties":{"type":{"const":"AssignImmunity"},"options":{"type":"array","items":{"$ref":"#/$defs/DamageType"}}},"required":["type"]},"AssignResistance":{"type":"object","additionalProperties":false,"properties":{"type":{"const":"AssignResistance"},"options":{"type":"array","items":{"$ref":"#/$defs/DamageType"}}},"required":["type"]},"AssignVulnerability":{"type":"object","additionalProperties":false,"properties":{"type":{"const":"AssignVulnerability"},"options":{"type":"array","items":{"$ref":"#/$defs/DamageType"}}},"required":["type"]},"UpgradeResToAbs":{"type":"object","additionalProperties":false,"properties":{"type":{"const":"UpgradeResToAbs"}},"required":["type"]},"UpgradeImmToAbs":{"type":"object","additionalProperties":false,"properties":{"type":{"const":"UpgradeImmToAbs"}},"required":["type"]},"AssignStatusImmunity":{"type":"object","additionalProperties":false,"properties":{"type":{"const":"AssignStatusImmunity"},"options":{"type":"array","items":{"enum":["dazed","shaken","slow","weak","enraged","poisoned"]}}},"required":["type"]},"ConditionalBonusSkill":{"type":"object","additionalProperties":false,"properties":{"type":{"const":"ConditionalBonusSkill"},"drawback":{"$ref":"#/$defs/Skill"},"options":{"type":"object","additionalProperties":false,"patternProperties":{".+":{"$ref":"#/$defs/Skill"}},"minProperties":1}},"required":["type","drawback","options"]},"ChooseCustomization":{"type":"object","additionalProperties":false,"properties":{"type":{"const":"ChooseCustomization"},"options":{"type":"object","patternProperties":{".+":{"$ref":"#/$defs/Skill"}},"minProperties":1}},"required":["type","options"]},"ConfigureAttack":{"type":"object","additionalProperties":false,"properties":{"type":{"const":"ConfigureAttack"},"configure":{"type":"object","properties":{"attributes":{"type":"array","items":{"$ref":"#/$defs/Attributes"},"minItems":2},"damageType":{"type":"array","items":{"$ref":"#/$defs/DamageType"},"minItems":2},"range":{"const":true},"special":{"type":"object","additionalProperties":false,"patternProperties":{".+":{"$ref":"#/$defs/Skill"}},"minProperties":2}}}},"required":["type","configure"]},"ChooseSpell":{"type":"object","additionalProperties":false,"properties":{"type":{"const":"ChooseSpell"},"spells":{"type":"object","additionalProperties":false,"patternProperties":{".+":{"$ref":"#/$defs/UnconfiguredSpell"}},"minProperties":1}},"required":["type","spells"]},"ChooseRoleSkill":{"type":"object","additionalProperties":false,"properties":{"type":{"const":"ChooseRoleSkill"},"options":{"type":"object","additionalProperties":false,"patternProperties":{".+":{"$ref":"#/$defs/UnconfiguredSkill"}},"minProperties":1}},"required":["type","options"]},"Skill":{"type":"object","additionalProperties":false,"properties":{"label":{"type":"string"},"description":{"type":"string"},"changes":{"$ref":"#/$defs/Changes"},"choices":{"type":"object","additionalProperties":false,"patternProperties":{".+":{"type":"object","additionalProperties":false,"properties":{"label":{"type":"string"},"options":{"type":"object","additionalProperties":false,"patternProperties":{".+":{"type":"string"}}},"conditional":{"type":"object","additionalProperties":false,"patternProperties":{".+":{"type":"string"}}}}}}},"require":{"$ref":"#/$defs/Requirements"},"disallow":{"$ref":"#/$defs/Requirements"}},"required":["label","description","changes"]},"Requirements":{"type":"object","additionalProperties":false,"properties":{"anyResistance":{"type":"boolean"},"anyImmunity":{"type":"boolean"},"rank":{"type":"array","items":{"$ref":"#/$defs/Rank"},"minItems":1},"attack":{"type":"string"},"anyRule":{"type":"array","items":{"type":"string"},"minItems":1},"anyAction":{"type":"array","items":{"type":"string"},"minItems":1},"anyCustomization":{"type":"array","items":{"type":"string"},"minItems":1}}},"Role":{"type":"object","additionalProperties":false,"properties":{"type":{"const":"role"},"role":{"type":"object","additionalProperties":false,"properties":{"label":{"type":"string"},"baseAttributes":{"type":"object","additionalProperties":false,"properties":{"dex":{"$ref":"#/$defs/AttributeDice"},"ins":{"$ref":"#/$defs/AttributeDice"},"mig":{"$ref":"#/$defs/AttributeDice"},"wlp":{"$ref":"#/$defs/AttributeDice"}},"required":["dex","ins","mig","wlp"]},"attributeChanges":{"type":"array","items":{"type":"object","additionalProperties":false,"properties":{"dex":{"$ref":"#/$defs/AttributeDice"},"ins":{"$ref":"#/$defs/AttributeDice"},"mig":{"$ref":"#/$defs/AttributeDice"},"wlp":{"$ref":"#/$defs/AttributeDice"}},"minProperties":1,"maxProperties":1},"minItems":3,"maxItems":3},"skillsByLevel":{"type":"array","items":{"$ref":"#/$defs/Changes"},"minItems":6,"maxItems":6},"baseline":{"$ref":"#/$defs/Changes"},"roleSkills":{"type":"object","additionalProperties":false,"patternProperties":{".+":{"$ref":"#/$defs/Skill"}}},"customizations":{"type":"object","additionalProperties":false,"patternProperties":{".+":{"$ref":"#/$defs/Skill"}}}},"required":["attributeChanges","baseAttributes","baseline","label","customizations","roleSkills","skillsByLevel"]}},"required":["type","role"]},"UnconfiguredSpell":{"type":"object","additionalProperties":false,"properties":{"name":{"type":"string"},"summary":{"type":"string"},"cost":{"type":"integer"},"target":{"enum":["self","single","upToThree","special"]},"costType":{"enum":["total","perTarget"]},"duration":{"enum":["instant","scene"]},"opportunity":{"type":"string"},"offensive":{"type":"object","additionalProperties":false,"properties":{"isOffensive":{"type":"boolean"},"damage":{"type":"object","additionalProperties":false,"properties":{"base":{"type":"integer"},"typeChoices":{"type":"array","items":{"$ref":"#/$defs/DamageType"},"minItems":1}},"required":["base","typeChoices"]}},"required":["isOffensive"]},"choices":{"type":"object","additionalProperties":false,"patternProperties":{".+":{"type":"object","additionalProperties":false,"properties":{"label":{"type":"string"},"options":{"type":"object","additionalProperties":false,"patternProperties":{".+":{"type":"string"}}},"conditional":{"type":"object","additionalProperties":false,"patternProperties":{".+":{"type":"string"}}}}}}}},"required":["name","summary","cost","costType","target","duration"]}}};const schema12 = {"type":"object","additionalProperties":false,"properties":{"type":{"const":"species"},"species":{"type":"object","additionalProperties":false,"properties":{"name":{"type":"string"},"changes":{"$ref":"#/$defs/Changes"}},"required":["name","changes"]}},"required":["type","species"]};const schema13 = {"type":"object","additionalProperties":false,"properties":{"model":{"$ref":"#/$defs/Model"},"steps":{"type":"array","items":{"$ref":"#/$defs/Step"}}}};const schema14 = {"type":"object","additionalProperties":false,"properties":{"name":{"type":"string"},"level":{"type":"integer"},"rank":{"$ref":"#/$defs/Rank"},"species":{"enum":["beast","construct","demon","elemental","humanoid","monster","plant","undead"]},"attributes":{"type":"object","additionalProperties":false,"properties":{"dex":{"$ref":"#/$defs/AttributeDice"},"ins":{"$ref":"#/$defs/AttributeDice"},"mig":{"$ref":"#/$defs/AttributeDice"},"wlp":{"$ref":"#/$defs/AttributeDice"}}},"bonuses":{"type":"object","additionalProperties":false,"properties":{"hp":{"type":"integer"},"mp":{"type":"integer"},"def":{"type":"integer"},"mDef":{"type":"integer"},"init":{"type":"integer"},"accuracy":{"type":"integer"},"magic":{"type":"integer"}}},"affinities":{"type":"object","additionalProperties":false,"properties":{"physical":{"$ref":"#/$defs/Affinity"},"air":{"$ref":"#/$defs/Affinity"},"bolt":{"$ref":"#/$defs/Affinity"},"dark":{"$ref":"#/$defs/Affinity"},"earth":{"$ref":"#/$defs/Affinity"},"fire":{"$ref":"#/$defs/Affinity"},"ice":{"$ref":"#/$defs/Affinity"},"light":{"$ref":"#/$defs/Affinity"},"poison":{"$ref":"#/$defs/Affinity"}}},"statusImmunities":{"type":"object","additionalProperties":false,"properties":{"dazed":{"type":"boolean"},"shaken":{"type":"boolean"},"slow":{"type":"boolean"},"weak":{"type":"boolean"},"enraged":{"type":"boolean"},"poisoned":{"type":"boolean"}}},"attacks":{"type":"object","additionalProperties":false,"patternProperties":{".+":{"$ref":"#/$defs/Attack"}}},"actions":{"type":"object","additionalProperties":false,"patternProperties":{".+":{"$ref":"#/$defs/Action"}}},"spells":{"type":"object","additionalProperties":false,"patternProperties":{".+":{"$ref":"#/$defs/Spell"}}},"rules":{"type":"object","additionalProperties":false,"patternProperties":{".+":{"$ref":"#/$defs/Rule"}}}}};const schema15 = {"enum":["soldier","elite","champion1","champion2","champion3","champion4","champion5","champion6"]};const schema16 = {"enum":["d6","d8","d10","d12"]};const schema20 = {"enum":["vul","","res","imm","abs"]};const schema33 = {"type":"object","additionalProperties":false,"properties":{"name":{"type":"string"},"summary":{"type":"string"},"description":{"type":"string"}},"required":["name","summary","description"]};const schema36 = {"type":"object","additionalProperties":false,"properties":{"name":{"type":"string"},"description":{"type":"string"},"summary":{"type":"string"}},"required":["name","description"]};const func2 = Object.prototype.hasOwnProperty;const pattern0 = new RegExp(".+", "u");const schema29 = {"type":"object","additionalProperties":false,"properties":{"name":{"type":"string"},"baseDamage":{"type":"integer"},"range":{"enum":["melee","ranged"]},"attributes":{"$ref":"#/$defs/Attributes"},"damageType":{"$ref":"#/$defs/DamageType"},"targetDefense":{"enum":["def","mDef"]},"special":{"type":"array","items":{"type":"string"}}},"required":["name","baseDamage"]};const schema32 = {"enum":["physical","air","bolt","dark","earth","fire","ice","light","poison"]};const schema30 = {"type":"array","items":{"$ref":"#/$defs/AttributeDice"},"minItems":2,"maxItems":2};function validate15(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(Array.isArray(data)){if(data.length > 2){validate15.errors = [{instancePath,schemaPath:"#/maxItems",keyword:"maxItems",params:{limit: 2},message:"must NOT have more than 2 items"}];return false;}else {if(data.length < 2){validate15.errors = [{instancePath,schemaPath:"#/minItems",keyword:"minItems",params:{limit: 2},message:"must NOT have fewer than 2 items"}];return false;}else {var valid0 = true;const len0 = data.length;for(let i0=0; i0<len0; i0++){let data0 = data[i0];const _errs1 = errors;if(!((((data0 === "d6") || (data0 === "d8")) || (data0 === "d10")) || (data0 === "d12"))){validate15.errors = [{instancePath:instancePath+"/" + i0,schemaPath:"#/$defs/AttributeDice/enum",keyword:"enum",params:{allowedValues: schema16.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs1 === errors;if(!valid0){break;}}}}}else {validate15.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}validate15.errors = vErrors;return errors === 0;}function validate14(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((data.name === undefined) && (missing0 = "name")) || ((data.baseDamage === undefined) && (missing0 = "baseDamage"))){validate14.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!(((((((key0 === "name") || (key0 === "baseDamage")) || (key0 === "range")) || (key0 === "attributes")) || (key0 === "damageType")) || (key0 === "targetDefense")) || (key0 === "special"))){validate14.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.name !== undefined){const _errs2 = errors;if(typeof data.name !== "string"){validate14.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.baseDamage !== undefined){let data1 = data.baseDamage;const _errs4 = errors;if(!(((typeof data1 == "number") && (!(data1 % 1) && !isNaN(data1))) && (isFinite(data1)))){validate14.errors = [{instancePath:instancePath+"/baseDamage",schemaPath:"#/properties/baseDamage/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.range !== undefined){let data2 = data.range;const _errs6 = errors;if(!((data2 === "melee") || (data2 === "ranged"))){validate14.errors = [{instancePath:instancePath+"/range",schemaPath:"#/properties/range/enum",keyword:"enum",params:{allowedValues: schema29.properties.range.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs6 === errors;}else {var valid0 = true;}if(valid0){if(data.attributes !== undefined){const _errs7 = errors;if(!(validate15(data.attributes, {instancePath:instancePath+"/attributes",parentData:data,parentDataProperty:"attributes",rootData}))){vErrors = vErrors === null ? validate15.errors : vErrors.concat(validate15.errors);errors = vErrors.length;}var valid0 = _errs7 === errors;}else {var valid0 = true;}if(valid0){if(data.damageType !== undefined){let data4 = data.damageType;const _errs8 = errors;if(!(((((((((data4 === "physical") || (data4 === "air")) || (data4 === "bolt")) || (data4 === "dark")) || (data4 === "earth")) || (data4 === "fire")) || (data4 === "ice")) || (data4 === "light")) || (data4 === "poison"))){validate14.errors = [{instancePath:instancePath+"/damageType",schemaPath:"#/$defs/DamageType/enum",keyword:"enum",params:{allowedValues: schema32.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs8 === errors;}else {var valid0 = true;}if(valid0){if(data.targetDefense !== undefined){let data5 = data.targetDefense;const _errs10 = errors;if(!((data5 === "def") || (data5 === "mDef"))){validate14.errors = [{instancePath:instancePath+"/targetDefense",schemaPath:"#/properties/targetDefense/enum",keyword:"enum",params:{allowedValues: schema29.properties.targetDefense.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs10 === errors;}else {var valid0 = true;}if(valid0){if(data.special !== undefined){let data6 = data.special;const _errs11 = errors;if(errors === _errs11){if(Array.isArray(data6)){var valid2 = true;const len0 = data6.length;for(let i0=0; i0<len0; i0++){const _errs13 = errors;if(typeof data6[i0] !== "string"){validate14.errors = [{instancePath:instancePath+"/special/" + i0,schemaPath:"#/properties/special/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs13 === errors;if(!valid2){break;}}}else {validate14.errors = [{instancePath:instancePath+"/special",schemaPath:"#/properties/special/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs11 === errors;}else {var valid0 = true;}}}}}}}}}}else {validate14.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate14.errors = vErrors;return errors === 0;}const schema34 = {"type":"object","additionalProperties":false,"properties":{"name":{"type":"string"},"summary":{"type":"string"},"cost":{"type":"integer"},"target":{"enum":["self","single","upToThree","special"]},"costType":{"enum":["total","perTarget"]},"duration":{"enum":["instant","scene"]},"opportunity":{"type":"string"},"offensive":{"type":"object","additionalProperties":false,"properties":{"attributes":{"$ref":"#/$defs/Attributes"},"accuracy":{"type":"integer"},"damage":{"type":"object","additionalProperties":false,"properties":{"base":{"type":"integer"},"type":{"$ref":"#/$defs/DamageType"}},"required":["base","type"]}},"required":["attributes","accuracy"]}},"required":["name","summary","cost","costType","target","duration"]};function validate18(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((((((data.name === undefined) && (missing0 = "name")) || ((data.summary === undefined) && (missing0 = "summary"))) || ((data.cost === undefined) && (missing0 = "cost"))) || ((data.costType === undefined) && (missing0 = "costType"))) || ((data.target === undefined) && (missing0 = "target"))) || ((data.duration === undefined) && (missing0 = "duration"))){validate18.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!((((((((key0 === "name") || (key0 === "summary")) || (key0 === "cost")) || (key0 === "target")) || (key0 === "costType")) || (key0 === "duration")) || (key0 === "opportunity")) || (key0 === "offensive"))){validate18.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.name !== undefined){const _errs2 = errors;if(typeof data.name !== "string"){validate18.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.summary !== undefined){const _errs4 = errors;if(typeof data.summary !== "string"){validate18.errors = [{instancePath:instancePath+"/summary",schemaPath:"#/properties/summary/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.cost !== undefined){let data2 = data.cost;const _errs6 = errors;if(!(((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2)))){validate18.errors = [{instancePath:instancePath+"/cost",schemaPath:"#/properties/cost/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid0 = _errs6 === errors;}else {var valid0 = true;}if(valid0){if(data.target !== undefined){let data3 = data.target;const _errs8 = errors;if(!((((data3 === "self") || (data3 === "single")) || (data3 === "upToThree")) || (data3 === "special"))){validate18.errors = [{instancePath:instancePath+"/target",schemaPath:"#/properties/target/enum",keyword:"enum",params:{allowedValues: schema34.properties.target.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs8 === errors;}else {var valid0 = true;}if(valid0){if(data.costType !== undefined){let data4 = data.costType;const _errs9 = errors;if(!((data4 === "total") || (data4 === "perTarget"))){validate18.errors = [{instancePath:instancePath+"/costType",schemaPath:"#/properties/costType/enum",keyword:"enum",params:{allowedValues: schema34.properties.costType.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs9 === errors;}else {var valid0 = true;}if(valid0){if(data.duration !== undefined){let data5 = data.duration;const _errs10 = errors;if(!((data5 === "instant") || (data5 === "scene"))){validate18.errors = [{instancePath:instancePath+"/duration",schemaPath:"#/properties/duration/enum",keyword:"enum",params:{allowedValues: schema34.properties.duration.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs10 === errors;}else {var valid0 = true;}if(valid0){if(data.opportunity !== undefined){const _errs11 = errors;if(typeof data.opportunity !== "string"){validate18.errors = [{instancePath:instancePath+"/opportunity",schemaPath:"#/properties/opportunity/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs11 === errors;}else {var valid0 = true;}if(valid0){if(data.offensive !== undefined){let data7 = data.offensive;const _errs13 = errors;if(errors === _errs13){if(data7 && typeof data7 == "object" && !Array.isArray(data7)){let missing1;if(((data7.attributes === undefined) && (missing1 = "attributes")) || ((data7.accuracy === undefined) && (missing1 = "accuracy"))){validate18.errors = [{instancePath:instancePath+"/offensive",schemaPath:"#/properties/offensive/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {const _errs15 = errors;for(const key1 in data7){if(!(((key1 === "attributes") || (key1 === "accuracy")) || (key1 === "damage"))){validate18.errors = [{instancePath:instancePath+"/offensive",schemaPath:"#/properties/offensive/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs15 === errors){if(data7.attributes !== undefined){const _errs16 = errors;if(!(validate15(data7.attributes, {instancePath:instancePath+"/offensive/attributes",parentData:data7,parentDataProperty:"attributes",rootData}))){vErrors = vErrors === null ? validate15.errors : vErrors.concat(validate15.errors);errors = vErrors.length;}var valid1 = _errs16 === errors;}else {var valid1 = true;}if(valid1){if(data7.accuracy !== undefined){let data9 = data7.accuracy;const _errs17 = errors;if(!(((typeof data9 == "number") && (!(data9 % 1) && !isNaN(data9))) && (isFinite(data9)))){validate18.errors = [{instancePath:instancePath+"/offensive/accuracy",schemaPath:"#/properties/offensive/properties/accuracy/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid1 = _errs17 === errors;}else {var valid1 = true;}if(valid1){if(data7.damage !== undefined){let data10 = data7.damage;const _errs19 = errors;if(errors === _errs19){if(data10 && typeof data10 == "object" && !Array.isArray(data10)){let missing2;if(((data10.base === undefined) && (missing2 = "base")) || ((data10.type === undefined) && (missing2 = "type"))){validate18.errors = [{instancePath:instancePath+"/offensive/damage",schemaPath:"#/properties/offensive/properties/damage/required",keyword:"required",params:{missingProperty: missing2},message:"must have required property '"+missing2+"'"}];return false;}else {const _errs21 = errors;for(const key2 in data10){if(!((key2 === "base") || (key2 === "type"))){validate18.errors = [{instancePath:instancePath+"/offensive/damage",schemaPath:"#/properties/offensive/properties/damage/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key2},message:"must NOT have additional properties"}];return false;break;}}if(_errs21 === errors){if(data10.base !== undefined){let data11 = data10.base;const _errs22 = errors;if(!(((typeof data11 == "number") && (!(data11 % 1) && !isNaN(data11))) && (isFinite(data11)))){validate18.errors = [{instancePath:instancePath+"/offensive/damage/base",schemaPath:"#/properties/offensive/properties/damage/properties/base/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid2 = _errs22 === errors;}else {var valid2 = true;}if(valid2){if(data10.type !== undefined){let data12 = data10.type;const _errs24 = errors;if(!(((((((((data12 === "physical") || (data12 === "air")) || (data12 === "bolt")) || (data12 === "dark")) || (data12 === "earth")) || (data12 === "fire")) || (data12 === "ice")) || (data12 === "light")) || (data12 === "poison"))){validate18.errors = [{instancePath:instancePath+"/offensive/damage/type",schemaPath:"#/$defs/DamageType/enum",keyword:"enum",params:{allowedValues: schema32.enum},message:"must be equal to one of the allowed values"}];return false;}var valid2 = _errs24 === errors;}else {var valid2 = true;}}}}}else {validate18.errors = [{instancePath:instancePath+"/offensive/damage",schemaPath:"#/properties/offensive/properties/damage/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs19 === errors;}else {var valid1 = true;}}}}}}else {validate18.errors = [{instancePath:instancePath+"/offensive",schemaPath:"#/properties/offensive/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs13 === errors;}else {var valid0 = true;}}}}}}}}}}}else {validate18.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate18.errors = vErrors;return errors === 0;}function validate13(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){const _errs1 = errors;for(const key0 in data){if(!(func2.call(schema14.properties, key0))){validate13.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.name !== undefined){const _errs2 = errors;if(typeof data.name !== "string"){validate13.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.level !== undefined){let data1 = data.level;const _errs4 = errors;if(!(((typeof data1 == "number") && (!(data1 % 1) && !isNaN(data1))) && (isFinite(data1)))){validate13.errors = [{instancePath:instancePath+"/level",schemaPath:"#/properties/level/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.rank !== undefined){let data2 = data.rank;const _errs6 = errors;if(!((((((((data2 === "soldier") || (data2 === "elite")) || (data2 === "champion1")) || (data2 === "champion2")) || (data2 === "champion3")) || (data2 === "champion4")) || (data2 === "champion5")) || (data2 === "champion6"))){validate13.errors = [{instancePath:instancePath+"/rank",schemaPath:"#/$defs/Rank/enum",keyword:"enum",params:{allowedValues: schema15.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs6 === errors;}else {var valid0 = true;}if(valid0){if(data.species !== undefined){let data3 = data.species;const _errs8 = errors;if(!((((((((data3 === "beast") || (data3 === "construct")) || (data3 === "demon")) || (data3 === "elemental")) || (data3 === "humanoid")) || (data3 === "monster")) || (data3 === "plant")) || (data3 === "undead"))){validate13.errors = [{instancePath:instancePath+"/species",schemaPath:"#/properties/species/enum",keyword:"enum",params:{allowedValues: schema14.properties.species.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs8 === errors;}else {var valid0 = true;}if(valid0){if(data.attributes !== undefined){let data4 = data.attributes;const _errs9 = errors;if(errors === _errs9){if(data4 && typeof data4 == "object" && !Array.isArray(data4)){const _errs11 = errors;for(const key1 in data4){if(!((((key1 === "dex") || (key1 === "ins")) || (key1 === "mig")) || (key1 === "wlp"))){validate13.errors = [{instancePath:instancePath+"/attributes",schemaPath:"#/properties/attributes/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs11 === errors){if(data4.dex !== undefined){let data5 = data4.dex;const _errs12 = errors;if(!((((data5 === "d6") || (data5 === "d8")) || (data5 === "d10")) || (data5 === "d12"))){validate13.errors = [{instancePath:instancePath+"/attributes/dex",schemaPath:"#/$defs/AttributeDice/enum",keyword:"enum",params:{allowedValues: schema16.enum},message:"must be equal to one of the allowed values"}];return false;}var valid2 = _errs12 === errors;}else {var valid2 = true;}if(valid2){if(data4.ins !== undefined){let data6 = data4.ins;const _errs14 = errors;if(!((((data6 === "d6") || (data6 === "d8")) || (data6 === "d10")) || (data6 === "d12"))){validate13.errors = [{instancePath:instancePath+"/attributes/ins",schemaPath:"#/$defs/AttributeDice/enum",keyword:"enum",params:{allowedValues: schema16.enum},message:"must be equal to one of the allowed values"}];return false;}var valid2 = _errs14 === errors;}else {var valid2 = true;}if(valid2){if(data4.mig !== undefined){let data7 = data4.mig;const _errs16 = errors;if(!((((data7 === "d6") || (data7 === "d8")) || (data7 === "d10")) || (data7 === "d12"))){validate13.errors = [{instancePath:instancePath+"/attributes/mig",schemaPath:"#/$defs/AttributeDice/enum",keyword:"enum",params:{allowedValues: schema16.enum},message:"must be equal to one of the allowed values"}];return false;}var valid2 = _errs16 === errors;}else {var valid2 = true;}if(valid2){if(data4.wlp !== undefined){let data8 = data4.wlp;const _errs18 = errors;if(!((((data8 === "d6") || (data8 === "d8")) || (data8 === "d10")) || (data8 === "d12"))){validate13.errors = [{instancePath:instancePath+"/attributes/wlp",schemaPath:"#/$defs/AttributeDice/enum",keyword:"enum",params:{allowedValues: schema16.enum},message:"must be equal to one of the allowed values"}];return false;}var valid2 = _errs18 === errors;}else {var valid2 = true;}}}}}}else {validate13.errors = [{instancePath:instancePath+"/attributes",schemaPath:"#/properties/attributes/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs9 === errors;}else {var valid0 = true;}if(valid0){if(data.bonuses !== undefined){let data9 = data.bonuses;const _errs20 = errors;if(errors === _errs20){if(data9 && typeof data9 == "object" && !Array.isArray(data9)){const _errs22 = errors;for(const key2 in data9){if(!(((((((key2 === "hp") || (key2 === "mp")) || (key2 === "def")) || (key2 === "mDef")) || (key2 === "init")) || (key2 === "accuracy")) || (key2 === "magic"))){validate13.errors = [{instancePath:instancePath+"/bonuses",schemaPath:"#/properties/bonuses/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key2},message:"must NOT have additional properties"}];return false;break;}}if(_errs22 === errors){if(data9.hp !== undefined){let data10 = data9.hp;const _errs23 = errors;if(!(((typeof data10 == "number") && (!(data10 % 1) && !isNaN(data10))) && (isFinite(data10)))){validate13.errors = [{instancePath:instancePath+"/bonuses/hp",schemaPath:"#/properties/bonuses/properties/hp/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid7 = _errs23 === errors;}else {var valid7 = true;}if(valid7){if(data9.mp !== undefined){let data11 = data9.mp;const _errs25 = errors;if(!(((typeof data11 == "number") && (!(data11 % 1) && !isNaN(data11))) && (isFinite(data11)))){validate13.errors = [{instancePath:instancePath+"/bonuses/mp",schemaPath:"#/properties/bonuses/properties/mp/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid7 = _errs25 === errors;}else {var valid7 = true;}if(valid7){if(data9.def !== undefined){let data12 = data9.def;const _errs27 = errors;if(!(((typeof data12 == "number") && (!(data12 % 1) && !isNaN(data12))) && (isFinite(data12)))){validate13.errors = [{instancePath:instancePath+"/bonuses/def",schemaPath:"#/properties/bonuses/properties/def/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid7 = _errs27 === errors;}else {var valid7 = true;}if(valid7){if(data9.mDef !== undefined){let data13 = data9.mDef;const _errs29 = errors;if(!(((typeof data13 == "number") && (!(data13 % 1) && !isNaN(data13))) && (isFinite(data13)))){validate13.errors = [{instancePath:instancePath+"/bonuses/mDef",schemaPath:"#/properties/bonuses/properties/mDef/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid7 = _errs29 === errors;}else {var valid7 = true;}if(valid7){if(data9.init !== undefined){let data14 = data9.init;const _errs31 = errors;if(!(((typeof data14 == "number") && (!(data14 % 1) && !isNaN(data14))) && (isFinite(data14)))){validate13.errors = [{instancePath:instancePath+"/bonuses/init",schemaPath:"#/properties/bonuses/properties/init/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid7 = _errs31 === errors;}else {var valid7 = true;}if(valid7){if(data9.accuracy !== undefined){let data15 = data9.accuracy;const _errs33 = errors;if(!(((typeof data15 == "number") && (!(data15 % 1) && !isNaN(data15))) && (isFinite(data15)))){validate13.errors = [{instancePath:instancePath+"/bonuses/accuracy",schemaPath:"#/properties/bonuses/properties/accuracy/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid7 = _errs33 === errors;}else {var valid7 = true;}if(valid7){if(data9.magic !== undefined){let data16 = data9.magic;const _errs35 = errors;if(!(((typeof data16 == "number") && (!(data16 % 1) && !isNaN(data16))) && (isFinite(data16)))){validate13.errors = [{instancePath:instancePath+"/bonuses/magic",schemaPath:"#/properties/bonuses/properties/magic/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid7 = _errs35 === errors;}else {var valid7 = true;}}}}}}}}}else {validate13.errors = [{instancePath:instancePath+"/bonuses",schemaPath:"#/properties/bonuses/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs20 === errors;}else {var valid0 = true;}if(valid0){if(data.affinities !== undefined){let data17 = data.affinities;const _errs37 = errors;if(errors === _errs37){if(data17 && typeof data17 == "object" && !Array.isArray(data17)){const _errs39 = errors;for(const key3 in data17){if(!(func2.call(schema14.properties.affinities.properties, key3))){validate13.errors = [{instancePath:instancePath+"/affinities",schemaPath:"#/properties/affinities/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key3},message:"must NOT have additional properties"}];return false;break;}}if(_errs39 === errors){if(data17.physical !== undefined){let data18 = data17.physical;const _errs40 = errors;if(!(((((data18 === "vul") || (data18 === "")) || (data18 === "res")) || (data18 === "imm")) || (data18 === "abs"))){validate13.errors = [{instancePath:instancePath+"/affinities/physical",schemaPath:"#/$defs/Affinity/enum",keyword:"enum",params:{allowedValues: schema20.enum},message:"must be equal to one of the allowed values"}];return false;}var valid8 = _errs40 === errors;}else {var valid8 = true;}if(valid8){if(data17.air !== undefined){let data19 = data17.air;const _errs42 = errors;if(!(((((data19 === "vul") || (data19 === "")) || (data19 === "res")) || (data19 === "imm")) || (data19 === "abs"))){validate13.errors = [{instancePath:instancePath+"/affinities/air",schemaPath:"#/$defs/Affinity/enum",keyword:"enum",params:{allowedValues: schema20.enum},message:"must be equal to one of the allowed values"}];return false;}var valid8 = _errs42 === errors;}else {var valid8 = true;}if(valid8){if(data17.bolt !== undefined){let data20 = data17.bolt;const _errs44 = errors;if(!(((((data20 === "vul") || (data20 === "")) || (data20 === "res")) || (data20 === "imm")) || (data20 === "abs"))){validate13.errors = [{instancePath:instancePath+"/affinities/bolt",schemaPath:"#/$defs/Affinity/enum",keyword:"enum",params:{allowedValues: schema20.enum},message:"must be equal to one of the allowed values"}];return false;}var valid8 = _errs44 === errors;}else {var valid8 = true;}if(valid8){if(data17.dark !== undefined){let data21 = data17.dark;const _errs46 = errors;if(!(((((data21 === "vul") || (data21 === "")) || (data21 === "res")) || (data21 === "imm")) || (data21 === "abs"))){validate13.errors = [{instancePath:instancePath+"/affinities/dark",schemaPath:"#/$defs/Affinity/enum",keyword:"enum",params:{allowedValues: schema20.enum},message:"must be equal to one of the allowed values"}];return false;}var valid8 = _errs46 === errors;}else {var valid8 = true;}if(valid8){if(data17.earth !== undefined){let data22 = data17.earth;const _errs48 = errors;if(!(((((data22 === "vul") || (data22 === "")) || (data22 === "res")) || (data22 === "imm")) || (data22 === "abs"))){validate13.errors = [{instancePath:instancePath+"/affinities/earth",schemaPath:"#/$defs/Affinity/enum",keyword:"enum",params:{allowedValues: schema20.enum},message:"must be equal to one of the allowed values"}];return false;}var valid8 = _errs48 === errors;}else {var valid8 = true;}if(valid8){if(data17.fire !== undefined){let data23 = data17.fire;const _errs50 = errors;if(!(((((data23 === "vul") || (data23 === "")) || (data23 === "res")) || (data23 === "imm")) || (data23 === "abs"))){validate13.errors = [{instancePath:instancePath+"/affinities/fire",schemaPath:"#/$defs/Affinity/enum",keyword:"enum",params:{allowedValues: schema20.enum},message:"must be equal to one of the allowed values"}];return false;}var valid8 = _errs50 === errors;}else {var valid8 = true;}if(valid8){if(data17.ice !== undefined){let data24 = data17.ice;const _errs52 = errors;if(!(((((data24 === "vul") || (data24 === "")) || (data24 === "res")) || (data24 === "imm")) || (data24 === "abs"))){validate13.errors = [{instancePath:instancePath+"/affinities/ice",schemaPath:"#/$defs/Affinity/enum",keyword:"enum",params:{allowedValues: schema20.enum},message:"must be equal to one of the allowed values"}];return false;}var valid8 = _errs52 === errors;}else {var valid8 = true;}if(valid8){if(data17.light !== undefined){let data25 = data17.light;const _errs54 = errors;if(!(((((data25 === "vul") || (data25 === "")) || (data25 === "res")) || (data25 === "imm")) || (data25 === "abs"))){validate13.errors = [{instancePath:instancePath+"/affinities/light",schemaPath:"#/$defs/Affinity/enum",keyword:"enum",params:{allowedValues: schema20.enum},message:"must be equal to one of the allowed values"}];return false;}var valid8 = _errs54 === errors;}else {var valid8 = true;}if(valid8){if(data17.poison !== undefined){let data26 = data17.poison;const _errs56 = errors;if(!(((((data26 === "vul") || (data26 === "")) || (data26 === "res")) || (data26 === "imm")) || (data26 === "abs"))){validate13.errors = [{instancePath:instancePath+"/affinities/poison",schemaPath:"#/$defs/Affinity/enum",keyword:"enum",params:{allowedValues: schema20.enum},message:"must be equal to one of the allowed values"}];return false;}var valid8 = _errs56 === errors;}else {var valid8 = true;}}}}}}}}}}}else {validate13.errors = [{instancePath:instancePath+"/affinities",schemaPath:"#/properties/affinities/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs37 === errors;}else {var valid0 = true;}if(valid0){if(data.statusImmunities !== undefined){let data27 = data.statusImmunities;const _errs58 = errors;if(errors === _errs58){if(data27 && typeof data27 == "object" && !Array.isArray(data27)){const _errs60 = errors;for(const key4 in data27){if(!((((((key4 === "dazed") || (key4 === "shaken")) || (key4 === "slow")) || (key4 === "weak")) || (key4 === "enraged")) || (key4 === "poisoned"))){validate13.errors = [{instancePath:instancePath+"/statusImmunities",schemaPath:"#/properties/statusImmunities/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key4},message:"must NOT have additional properties"}];return false;break;}}if(_errs60 === errors){if(data27.dazed !== undefined){const _errs61 = errors;if(typeof data27.dazed !== "boolean"){validate13.errors = [{instancePath:instancePath+"/statusImmunities/dazed",schemaPath:"#/properties/statusImmunities/properties/dazed/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid18 = _errs61 === errors;}else {var valid18 = true;}if(valid18){if(data27.shaken !== undefined){const _errs63 = errors;if(typeof data27.shaken !== "boolean"){validate13.errors = [{instancePath:instancePath+"/statusImmunities/shaken",schemaPath:"#/properties/statusImmunities/properties/shaken/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid18 = _errs63 === errors;}else {var valid18 = true;}if(valid18){if(data27.slow !== undefined){const _errs65 = errors;if(typeof data27.slow !== "boolean"){validate13.errors = [{instancePath:instancePath+"/statusImmunities/slow",schemaPath:"#/properties/statusImmunities/properties/slow/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid18 = _errs65 === errors;}else {var valid18 = true;}if(valid18){if(data27.weak !== undefined){const _errs67 = errors;if(typeof data27.weak !== "boolean"){validate13.errors = [{instancePath:instancePath+"/statusImmunities/weak",schemaPath:"#/properties/statusImmunities/properties/weak/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid18 = _errs67 === errors;}else {var valid18 = true;}if(valid18){if(data27.enraged !== undefined){const _errs69 = errors;if(typeof data27.enraged !== "boolean"){validate13.errors = [{instancePath:instancePath+"/statusImmunities/enraged",schemaPath:"#/properties/statusImmunities/properties/enraged/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid18 = _errs69 === errors;}else {var valid18 = true;}if(valid18){if(data27.poisoned !== undefined){const _errs71 = errors;if(typeof data27.poisoned !== "boolean"){validate13.errors = [{instancePath:instancePath+"/statusImmunities/poisoned",schemaPath:"#/properties/statusImmunities/properties/poisoned/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid18 = _errs71 === errors;}else {var valid18 = true;}}}}}}}}else {validate13.errors = [{instancePath:instancePath+"/statusImmunities",schemaPath:"#/properties/statusImmunities/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs58 === errors;}else {var valid0 = true;}if(valid0){if(data.attacks !== undefined){let data34 = data.attacks;const _errs73 = errors;if(errors === _errs73){if(data34 && typeof data34 == "object" && !Array.isArray(data34)){const _errs75 = errors;for(const key5 in data34){if(!(pattern0.test(key5))){validate13.errors = [{instancePath:instancePath+"/attacks",schemaPath:"#/properties/attacks/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key5},message:"must NOT have additional properties"}];return false;break;}}if(_errs75 === errors){var valid19 = true;for(const key6 in data34){if(pattern0.test(key6)){const _errs76 = errors;if(!(validate14(data34[key6], {instancePath:instancePath+"/attacks/" + key6.replace(/~/g, "~0").replace(/\//g, "~1"),parentData:data34,parentDataProperty:key6,rootData}))){vErrors = vErrors === null ? validate14.errors : vErrors.concat(validate14.errors);errors = vErrors.length;}var valid19 = _errs76 === errors;if(!valid19){break;}}}}}else {validate13.errors = [{instancePath:instancePath+"/attacks",schemaPath:"#/properties/attacks/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs73 === errors;}else {var valid0 = true;}if(valid0){if(data.actions !== undefined){let data36 = data.actions;const _errs77 = errors;if(errors === _errs77){if(data36 && typeof data36 == "object" && !Array.isArray(data36)){const _errs79 = errors;for(const key7 in data36){if(!(pattern0.test(key7))){validate13.errors = [{instancePath:instancePath+"/actions",schemaPath:"#/properties/actions/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key7},message:"must NOT have additional properties"}];return false;break;}}if(_errs79 === errors){var valid20 = true;for(const key8 in data36){if(pattern0.test(key8)){let data37 = data36[key8];const _errs80 = errors;const _errs81 = errors;if(errors === _errs81){if(data37 && typeof data37 == "object" && !Array.isArray(data37)){let missing0;if((((data37.name === undefined) && (missing0 = "name")) || ((data37.summary === undefined) && (missing0 = "summary"))) || ((data37.description === undefined) && (missing0 = "description"))){validate13.errors = [{instancePath:instancePath+"/actions/" + key8.replace(/~/g, "~0").replace(/\//g, "~1"),schemaPath:"#/$defs/Action/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs83 = errors;for(const key9 in data37){if(!(((key9 === "name") || (key9 === "summary")) || (key9 === "description"))){validate13.errors = [{instancePath:instancePath+"/actions/" + key8.replace(/~/g, "~0").replace(/\//g, "~1"),schemaPath:"#/$defs/Action/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key9},message:"must NOT have additional properties"}];return false;break;}}if(_errs83 === errors){if(data37.name !== undefined){const _errs84 = errors;if(typeof data37.name !== "string"){validate13.errors = [{instancePath:instancePath+"/actions/" + key8.replace(/~/g, "~0").replace(/\//g, "~1")+"/name",schemaPath:"#/$defs/Action/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid22 = _errs84 === errors;}else {var valid22 = true;}if(valid22){if(data37.summary !== undefined){const _errs86 = errors;if(typeof data37.summary !== "string"){validate13.errors = [{instancePath:instancePath+"/actions/" + key8.replace(/~/g, "~0").replace(/\//g, "~1")+"/summary",schemaPath:"#/$defs/Action/properties/summary/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid22 = _errs86 === errors;}else {var valid22 = true;}if(valid22){if(data37.description !== undefined){const _errs88 = errors;if(typeof data37.description !== "string"){validate13.errors = [{instancePath:instancePath+"/actions/" + key8.replace(/~/g, "~0").replace(/\//g, "~1")+"/description",schemaPath:"#/$defs/Action/properties/description/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid22 = _errs88 === errors;}else {var valid22 = true;}}}}}}else {validate13.errors = [{instancePath:instancePath+"/actions/" + key8.replace(/~/g, "~0").replace(/\//g, "~1"),schemaPath:"#/$defs/Action/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid20 = _errs80 === errors;if(!valid20){break;}}}}}else {validate13.errors = [{instancePath:instancePath+"/actions",schemaPath:"#/properties/actions/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs77 === errors;}else {var valid0 = true;}if(valid0){if(data.spells !== undefined){let data41 = data.spells;const _errs90 = errors;if(errors === _errs90){if(data41 && typeof data41 == "object" && !Array.isArray(data41)){const _errs92 = errors;for(const key10 in data41){if(!(pattern0.test(key10))){validate13.errors = [{instancePath:instancePath+"/spells",schemaPath:"#/properties/spells/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key10},message:"must NOT have additional properties"}];return false;break;}}if(_errs92 === errors){var valid23 = true;for(const key11 in data41){if(pattern0.test(key11)){const _errs93 = errors;if(!(validate18(data41[key11], {instancePath:instancePath+"/spells/" + key11.replace(/~/g, "~0").replace(/\//g, "~1"),parentData:data41,parentDataProperty:key11,rootData}))){vErrors = vErrors === null ? validate18.errors : vErrors.concat(validate18.errors);errors = vErrors.length;}var valid23 = _errs93 === errors;if(!valid23){break;}}}}}else {validate13.errors = [{instancePath:instancePath+"/spells",schemaPath:"#/properties/spells/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs90 === errors;}else {var valid0 = true;}if(valid0){if(data.rules !== undefined){let data43 = data.rules;const _errs94 = errors;if(errors === _errs94){if(data43 && typeof data43 == "object" && !Array.isArray(data43)){const _errs96 = errors;for(const key12 in data43){if(!(pattern0.test(key12))){validate13.errors = [{instancePath:instancePath+"/rules",schemaPath:"#/properties/rules/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key12},message:"must NOT have additional properties"}];return false;break;}}if(_errs96 === errors){var valid24 = true;for(const key13 in data43){if(pattern0.test(key13)){let data44 = data43[key13];const _errs97 = errors;const _errs98 = errors;if(errors === _errs98){if(data44 && typeof data44 == "object" && !Array.isArray(data44)){let missing1;if(((data44.name === undefined) && (missing1 = "name")) || ((data44.description === undefined) && (missing1 = "description"))){validate13.errors = [{instancePath:instancePath+"/rules/" + key13.replace(/~/g, "~0").replace(/\//g, "~1"),schemaPath:"#/$defs/Rule/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {const _errs100 = errors;for(const key14 in data44){if(!(((key14 === "name") || (key14 === "description")) || (key14 === "summary"))){validate13.errors = [{instancePath:instancePath+"/rules/" + key13.replace(/~/g, "~0").replace(/\//g, "~1"),schemaPath:"#/$defs/Rule/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key14},message:"must NOT have additional properties"}];return false;break;}}if(_errs100 === errors){if(data44.name !== undefined){const _errs101 = errors;if(typeof data44.name !== "string"){validate13.errors = [{instancePath:instancePath+"/rules/" + key13.replace(/~/g, "~0").replace(/\//g, "~1")+"/name",schemaPath:"#/$defs/Rule/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid26 = _errs101 === errors;}else {var valid26 = true;}if(valid26){if(data44.description !== undefined){const _errs103 = errors;if(typeof data44.description !== "string"){validate13.errors = [{instancePath:instancePath+"/rules/" + key13.replace(/~/g, "~0").replace(/\//g, "~1")+"/description",schemaPath:"#/$defs/Rule/properties/description/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid26 = _errs103 === errors;}else {var valid26 = true;}if(valid26){if(data44.summary !== undefined){const _errs105 = errors;if(typeof data44.summary !== "string"){validate13.errors = [{instancePath:instancePath+"/rules/" + key13.replace(/~/g, "~0").replace(/\//g, "~1")+"/summary",schemaPath:"#/$defs/Rule/properties/summary/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid26 = _errs105 === errors;}else {var valid26 = true;}}}}}}else {validate13.errors = [{instancePath:instancePath+"/rules/" + key13.replace(/~/g, "~0").replace(/\//g, "~1"),schemaPath:"#/$defs/Rule/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid24 = _errs97 === errors;if(!valid24){break;}}}}}else {validate13.errors = [{instancePath:instancePath+"/rules",schemaPath:"#/properties/rules/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs94 === errors;}else {var valid0 = true;}}}}}}}}}}}}}}else {validate13.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate13.errors = vErrors;return errors === 0;}const schema37 = {"anyOf":[{"$ref":"#/$defs/AssignSpeciesVulnerability"}]};const schema38 = {"type":"object","additionalProperties":false,"properties":{"type":{"const":"AssignSpeciesVulnerability"},"options":{"type":"array","items":{"$ref":"#/$defs/DamageType"}}},"required":["type"]};function validate23(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.type === undefined) && (missing0 = "type")){validate23.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!((key0 === "type") || (key0 === "options"))){validate23.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.type !== undefined){const _errs2 = errors;if("AssignSpeciesVulnerability" !== data.type){validate23.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/const",keyword:"const",params:{allowedValue: "AssignSpeciesVulnerability"},message:"must be equal to constant"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.options !== undefined){let data1 = data.options;const _errs3 = errors;if(errors === _errs3){if(Array.isArray(data1)){var valid1 = true;const len0 = data1.length;for(let i0=0; i0<len0; i0++){let data2 = data1[i0];const _errs5 = errors;if(!(((((((((data2 === "physical") || (data2 === "air")) || (data2 === "bolt")) || (data2 === "dark")) || (data2 === "earth")) || (data2 === "fire")) || (data2 === "ice")) || (data2 === "light")) || (data2 === "poison"))){validate23.errors = [{instancePath:instancePath+"/options/" + i0,schemaPath:"#/$defs/DamageType/enum",keyword:"enum",params:{allowedValues: schema32.enum},message:"must be equal to one of the allowed values"}];return false;}var valid1 = _errs5 === errors;if(!valid1){break;}}}else {validate23.errors = [{instancePath:instancePath+"/options",schemaPath:"#/properties/options/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs3 === errors;}else {var valid0 = true;}}}}}else {validate23.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate23.errors = vErrors;return errors === 0;}function validate22(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;const _errs0 = errors;let valid0 = false;const _errs1 = errors;if(!(validate23(data, {instancePath,parentData,parentDataProperty,rootData}))){vErrors = vErrors === null ? validate23.errors : vErrors.concat(validate23.errors);errors = vErrors.length;}var _valid0 = _errs1 === errors;valid0 = valid0 || _valid0;if(!valid0){const err0 = {instancePath,schemaPath:"#/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;validate22.errors = vErrors;return false;}else {errors = _errs0;if(vErrors !== null){if(_errs0){vErrors.length = _errs0;}else {vErrors = null;}}}validate22.errors = vErrors;return errors === 0;}function validate12(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){const _errs1 = errors;for(const key0 in data){if(!((key0 === "model") || (key0 === "steps"))){validate12.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.model !== undefined){const _errs2 = errors;if(!(validate13(data.model, {instancePath:instancePath+"/model",parentData:data,parentDataProperty:"model",rootData}))){vErrors = vErrors === null ? validate13.errors : vErrors.concat(validate13.errors);errors = vErrors.length;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.steps !== undefined){let data1 = data.steps;const _errs3 = errors;if(errors === _errs3){if(Array.isArray(data1)){var valid1 = true;const len0 = data1.length;for(let i0=0; i0<len0; i0++){const _errs5 = errors;if(!(validate22(data1[i0], {instancePath:instancePath+"/steps/" + i0,parentData:data1,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate22.errors : vErrors.concat(validate22.errors);errors = vErrors.length;}var valid1 = _errs5 === errors;if(!valid1){break;}}}else {validate12.errors = [{instancePath:instancePath+"/steps",schemaPath:"#/properties/steps/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs3 === errors;}else {var valid0 = true;}}}}else {validate12.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate12.errors = vErrors;return errors === 0;}function validate11(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((data.type === undefined) && (missing0 = "type")) || ((data.species === undefined) && (missing0 = "species"))){validate11.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!((key0 === "type") || (key0 === "species"))){validate11.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.type !== undefined){const _errs2 = errors;if("species" !== data.type){validate11.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/const",keyword:"const",params:{allowedValue: "species"},message:"must be equal to constant"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.species !== undefined){let data1 = data.species;const _errs3 = errors;if(errors === _errs3){if(data1 && typeof data1 == "object" && !Array.isArray(data1)){let missing1;if(((data1.name === undefined) && (missing1 = "name")) || ((data1.changes === undefined) && (missing1 = "changes"))){validate11.errors = [{instancePath:instancePath+"/species",schemaPath:"#/properties/species/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {const _errs5 = errors;for(const key1 in data1){if(!((key1 === "name") || (key1 === "changes"))){validate11.errors = [{instancePath:instancePath+"/species",schemaPath:"#/properties/species/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs5 === errors){if(data1.name !== undefined){const _errs6 = errors;if(typeof data1.name !== "string"){validate11.errors = [{instancePath:instancePath+"/species/name",schemaPath:"#/properties/species/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid1 = _errs6 === errors;}else {var valid1 = true;}if(valid1){if(data1.changes !== undefined){const _errs8 = errors;if(!(validate12(data1.changes, {instancePath:instancePath+"/species/changes",parentData:data1,parentDataProperty:"changes",rootData}))){vErrors = vErrors === null ? validate12.errors : vErrors.concat(validate12.errors);errors = vErrors.length;}var valid1 = _errs8 === errors;}else {var valid1 = true;}}}}}else {validate11.errors = [{instancePath:instancePath+"/species",schemaPath:"#/properties/species/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs3 === errors;}else {var valid0 = true;}}}}}else {validate11.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate11.errors = vErrors;return errors === 0;}const schema40 = {"type":"object","additionalProperties":false,"properties":{"type":{"const":"role"},"role":{"type":"object","additionalProperties":false,"properties":{"label":{"type":"string"},"baseAttributes":{"type":"object","additionalProperties":false,"properties":{"dex":{"$ref":"#/$defs/AttributeDice"},"ins":{"$ref":"#/$defs/AttributeDice"},"mig":{"$ref":"#/$defs/AttributeDice"},"wlp":{"$ref":"#/$defs/AttributeDice"}},"required":["dex","ins","mig","wlp"]},"attributeChanges":{"type":"array","items":{"type":"object","additionalProperties":false,"properties":{"dex":{"$ref":"#/$defs/AttributeDice"},"ins":{"$ref":"#/$defs/AttributeDice"},"mig":{"$ref":"#/$defs/AttributeDice"},"wlp":{"$ref":"#/$defs/AttributeDice"}},"minProperties":1,"maxProperties":1},"minItems":3,"maxItems":3},"skillsByLevel":{"type":"array","items":{"$ref":"#/$defs/Changes"},"minItems":6,"maxItems":6},"baseline":{"$ref":"#/$defs/Changes"},"roleSkills":{"type":"object","additionalProperties":false,"patternProperties":{".+":{"$ref":"#/$defs/Skill"}}},"customizations":{"type":"object","additionalProperties":false,"patternProperties":{".+":{"$ref":"#/$defs/Skill"}}}},"required":["attributeChanges","baseAttributes","baseline","label","customizations","roleSkills","skillsByLevel"]}},"required":["type","role"]};const schema49 = {"type":"object","additionalProperties":false,"properties":{"label":{"type":"string"},"description":{"type":"string"},"changes":{"$ref":"#/$defs/Changes"},"choices":{"type":"object","additionalProperties":false,"patternProperties":{".+":{"type":"object","additionalProperties":false,"properties":{"label":{"type":"string"},"options":{"type":"object","additionalProperties":false,"patternProperties":{".+":{"type":"string"}}},"conditional":{"type":"object","additionalProperties":false,"patternProperties":{".+":{"type":"string"}}}}}}},"require":{"$ref":"#/$defs/Requirements"},"disallow":{"$ref":"#/$defs/Requirements"}},"required":["label","description","changes"]};const schema50 = {"type":"object","additionalProperties":false,"properties":{"anyResistance":{"type":"boolean"},"anyImmunity":{"type":"boolean"},"rank":{"type":"array","items":{"$ref":"#/$defs/Rank"},"minItems":1},"attack":{"type":"string"},"anyRule":{"type":"array","items":{"type":"string"},"minItems":1},"anyAction":{"type":"array","items":{"type":"string"},"minItems":1},"anyCustomization":{"type":"array","items":{"type":"string"},"minItems":1}}};function validate33(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){const _errs1 = errors;for(const key0 in data){if(!(((((((key0 === "anyResistance") || (key0 === "anyImmunity")) || (key0 === "rank")) || (key0 === "attack")) || (key0 === "anyRule")) || (key0 === "anyAction")) || (key0 === "anyCustomization"))){validate33.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.anyResistance !== undefined){const _errs2 = errors;if(typeof data.anyResistance !== "boolean"){validate33.errors = [{instancePath:instancePath+"/anyResistance",schemaPath:"#/properties/anyResistance/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.anyImmunity !== undefined){const _errs4 = errors;if(typeof data.anyImmunity !== "boolean"){validate33.errors = [{instancePath:instancePath+"/anyImmunity",schemaPath:"#/properties/anyImmunity/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.rank !== undefined){let data2 = data.rank;const _errs6 = errors;if(errors === _errs6){if(Array.isArray(data2)){if(data2.length < 1){validate33.errors = [{instancePath:instancePath+"/rank",schemaPath:"#/properties/rank/minItems",keyword:"minItems",params:{limit: 1},message:"must NOT have fewer than 1 items"}];return false;}else {var valid1 = true;const len0 = data2.length;for(let i0=0; i0<len0; i0++){let data3 = data2[i0];const _errs8 = errors;if(!((((((((data3 === "soldier") || (data3 === "elite")) || (data3 === "champion1")) || (data3 === "champion2")) || (data3 === "champion3")) || (data3 === "champion4")) || (data3 === "champion5")) || (data3 === "champion6"))){validate33.errors = [{instancePath:instancePath+"/rank/" + i0,schemaPath:"#/$defs/Rank/enum",keyword:"enum",params:{allowedValues: schema15.enum},message:"must be equal to one of the allowed values"}];return false;}var valid1 = _errs8 === errors;if(!valid1){break;}}}}else {validate33.errors = [{instancePath:instancePath+"/rank",schemaPath:"#/properties/rank/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs6 === errors;}else {var valid0 = true;}if(valid0){if(data.attack !== undefined){const _errs10 = errors;if(typeof data.attack !== "string"){validate33.errors = [{instancePath:instancePath+"/attack",schemaPath:"#/properties/attack/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs10 === errors;}else {var valid0 = true;}if(valid0){if(data.anyRule !== undefined){let data5 = data.anyRule;const _errs12 = errors;if(errors === _errs12){if(Array.isArray(data5)){if(data5.length < 1){validate33.errors = [{instancePath:instancePath+"/anyRule",schemaPath:"#/properties/anyRule/minItems",keyword:"minItems",params:{limit: 1},message:"must NOT have fewer than 1 items"}];return false;}else {var valid3 = true;const len1 = data5.length;for(let i1=0; i1<len1; i1++){const _errs14 = errors;if(typeof data5[i1] !== "string"){validate33.errors = [{instancePath:instancePath+"/anyRule/" + i1,schemaPath:"#/properties/anyRule/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs14 === errors;if(!valid3){break;}}}}else {validate33.errors = [{instancePath:instancePath+"/anyRule",schemaPath:"#/properties/anyRule/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs12 === errors;}else {var valid0 = true;}if(valid0){if(data.anyAction !== undefined){let data7 = data.anyAction;const _errs16 = errors;if(errors === _errs16){if(Array.isArray(data7)){if(data7.length < 1){validate33.errors = [{instancePath:instancePath+"/anyAction",schemaPath:"#/properties/anyAction/minItems",keyword:"minItems",params:{limit: 1},message:"must NOT have fewer than 1 items"}];return false;}else {var valid4 = true;const len2 = data7.length;for(let i2=0; i2<len2; i2++){const _errs18 = errors;if(typeof data7[i2] !== "string"){validate33.errors = [{instancePath:instancePath+"/anyAction/" + i2,schemaPath:"#/properties/anyAction/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid4 = _errs18 === errors;if(!valid4){break;}}}}else {validate33.errors = [{instancePath:instancePath+"/anyAction",schemaPath:"#/properties/anyAction/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs16 === errors;}else {var valid0 = true;}if(valid0){if(data.anyCustomization !== undefined){let data9 = data.anyCustomization;const _errs20 = errors;if(errors === _errs20){if(Array.isArray(data9)){if(data9.length < 1){validate33.errors = [{instancePath:instancePath+"/anyCustomization",schemaPath:"#/properties/anyCustomization/minItems",keyword:"minItems",params:{limit: 1},message:"must NOT have fewer than 1 items"}];return false;}else {var valid5 = true;const len3 = data9.length;for(let i3=0; i3<len3; i3++){const _errs22 = errors;if(typeof data9[i3] !== "string"){validate33.errors = [{instancePath:instancePath+"/anyCustomization/" + i3,schemaPath:"#/properties/anyCustomization/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid5 = _errs22 === errors;if(!valid5){break;}}}}else {validate33.errors = [{instancePath:instancePath+"/anyCustomization",schemaPath:"#/properties/anyCustomization/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs20 === errors;}else {var valid0 = true;}}}}}}}}}else {validate33.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate33.errors = vErrors;return errors === 0;}function validate31(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((((data.label === undefined) && (missing0 = "label")) || ((data.description === undefined) && (missing0 = "description"))) || ((data.changes === undefined) && (missing0 = "changes"))){validate31.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!((((((key0 === "label") || (key0 === "description")) || (key0 === "changes")) || (key0 === "choices")) || (key0 === "require")) || (key0 === "disallow"))){validate31.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.label !== undefined){const _errs2 = errors;if(typeof data.label !== "string"){validate31.errors = [{instancePath:instancePath+"/label",schemaPath:"#/properties/label/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.description !== undefined){const _errs4 = errors;if(typeof data.description !== "string"){validate31.errors = [{instancePath:instancePath+"/description",schemaPath:"#/properties/description/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.changes !== undefined){const _errs6 = errors;if(!(validate12(data.changes, {instancePath:instancePath+"/changes",parentData:data,parentDataProperty:"changes",rootData}))){vErrors = vErrors === null ? validate12.errors : vErrors.concat(validate12.errors);errors = vErrors.length;}var valid0 = _errs6 === errors;}else {var valid0 = true;}if(valid0){if(data.choices !== undefined){let data3 = data.choices;const _errs7 = errors;if(errors === _errs7){if(data3 && typeof data3 == "object" && !Array.isArray(data3)){const _errs9 = errors;for(const key1 in data3){if(!(pattern0.test(key1))){validate31.errors = [{instancePath:instancePath+"/choices",schemaPath:"#/properties/choices/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs9 === errors){var valid1 = true;for(const key2 in data3){if(pattern0.test(key2)){let data4 = data3[key2];const _errs10 = errors;if(errors === _errs10){if(data4 && typeof data4 == "object" && !Array.isArray(data4)){const _errs12 = errors;for(const key3 in data4){if(!(((key3 === "label") || (key3 === "options")) || (key3 === "conditional"))){validate31.errors = [{instancePath:instancePath+"/choices/" + key2.replace(/~/g, "~0").replace(/\//g, "~1"),schemaPath:"#/properties/choices/patternProperties/.%2B/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key3},message:"must NOT have additional properties"}];return false;break;}}if(_errs12 === errors){if(data4.label !== undefined){const _errs13 = errors;if(typeof data4.label !== "string"){validate31.errors = [{instancePath:instancePath+"/choices/" + key2.replace(/~/g, "~0").replace(/\//g, "~1")+"/label",schemaPath:"#/properties/choices/patternProperties/.%2B/properties/label/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs13 === errors;}else {var valid2 = true;}if(valid2){if(data4.options !== undefined){let data6 = data4.options;const _errs15 = errors;if(errors === _errs15){if(data6 && typeof data6 == "object" && !Array.isArray(data6)){const _errs17 = errors;for(const key4 in data6){if(!(pattern0.test(key4))){validate31.errors = [{instancePath:instancePath+"/choices/" + key2.replace(/~/g, "~0").replace(/\//g, "~1")+"/options",schemaPath:"#/properties/choices/patternProperties/.%2B/properties/options/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key4},message:"must NOT have additional properties"}];return false;break;}}if(_errs17 === errors){var valid3 = true;for(const key5 in data6){if(pattern0.test(key5)){const _errs18 = errors;if(typeof data6[key5] !== "string"){validate31.errors = [{instancePath:instancePath+"/choices/" + key2.replace(/~/g, "~0").replace(/\//g, "~1")+"/options/" + key5.replace(/~/g, "~0").replace(/\//g, "~1"),schemaPath:"#/properties/choices/patternProperties/.%2B/properties/options/patternProperties/.%2B/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs18 === errors;if(!valid3){break;}}}}}else {validate31.errors = [{instancePath:instancePath+"/choices/" + key2.replace(/~/g, "~0").replace(/\//g, "~1")+"/options",schemaPath:"#/properties/choices/patternProperties/.%2B/properties/options/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid2 = _errs15 === errors;}else {var valid2 = true;}if(valid2){if(data4.conditional !== undefined){let data8 = data4.conditional;const _errs20 = errors;if(errors === _errs20){if(data8 && typeof data8 == "object" && !Array.isArray(data8)){const _errs22 = errors;for(const key6 in data8){if(!(pattern0.test(key6))){validate31.errors = [{instancePath:instancePath+"/choices/" + key2.replace(/~/g, "~0").replace(/\//g, "~1")+"/conditional",schemaPath:"#/properties/choices/patternProperties/.%2B/properties/conditional/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key6},message:"must NOT have additional properties"}];return false;break;}}if(_errs22 === errors){var valid4 = true;for(const key7 in data8){if(pattern0.test(key7)){const _errs23 = errors;if(typeof data8[key7] !== "string"){validate31.errors = [{instancePath:instancePath+"/choices/" + key2.replace(/~/g, "~0").replace(/\//g, "~1")+"/conditional/" + key7.replace(/~/g, "~0").replace(/\//g, "~1"),schemaPath:"#/properties/choices/patternProperties/.%2B/properties/conditional/patternProperties/.%2B/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid4 = _errs23 === errors;if(!valid4){break;}}}}}else {validate31.errors = [{instancePath:instancePath+"/choices/" + key2.replace(/~/g, "~0").replace(/\//g, "~1")+"/conditional",schemaPath:"#/properties/choices/patternProperties/.%2B/properties/conditional/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid2 = _errs20 === errors;}else {var valid2 = true;}}}}}else {validate31.errors = [{instancePath:instancePath+"/choices/" + key2.replace(/~/g, "~0").replace(/\//g, "~1"),schemaPath:"#/properties/choices/patternProperties/.%2B/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs10 === errors;if(!valid1){break;}}}}}else {validate31.errors = [{instancePath:instancePath+"/choices",schemaPath:"#/properties/choices/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs7 === errors;}else {var valid0 = true;}if(valid0){if(data.require !== undefined){const _errs25 = errors;if(!(validate33(data.require, {instancePath:instancePath+"/require",parentData:data,parentDataProperty:"require",rootData}))){vErrors = vErrors === null ? validate33.errors : vErrors.concat(validate33.errors);errors = vErrors.length;}var valid0 = _errs25 === errors;}else {var valid0 = true;}if(valid0){if(data.disallow !== undefined){const _errs26 = errors;if(!(validate33(data.disallow, {instancePath:instancePath+"/disallow",parentData:data,parentDataProperty:"disallow",rootData}))){vErrors = vErrors === null ? validate33.errors : vErrors.concat(validate33.errors);errors = vErrors.length;}var valid0 = _errs26 === errors;}else {var valid0 = true;}}}}}}}}}else {validate31.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate31.errors = vErrors;return errors === 0;}function validate28(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((data.type === undefined) && (missing0 = "type")) || ((data.role === undefined) && (missing0 = "role"))){validate28.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!((key0 === "type") || (key0 === "role"))){validate28.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.type !== undefined){const _errs2 = errors;if("role" !== data.type){validate28.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/const",keyword:"const",params:{allowedValue: "role"},message:"must be equal to constant"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.role !== undefined){let data1 = data.role;const _errs3 = errors;if(errors === _errs3){if(data1 && typeof data1 == "object" && !Array.isArray(data1)){let missing1;if((((((((data1.attributeChanges === undefined) && (missing1 = "attributeChanges")) || ((data1.baseAttributes === undefined) && (missing1 = "baseAttributes"))) || ((data1.baseline === undefined) && (missing1 = "baseline"))) || ((data1.label === undefined) && (missing1 = "label"))) || ((data1.customizations === undefined) && (missing1 = "customizations"))) || ((data1.roleSkills === undefined) && (missing1 = "roleSkills"))) || ((data1.skillsByLevel === undefined) && (missing1 = "skillsByLevel"))){validate28.errors = [{instancePath:instancePath+"/role",schemaPath:"#/properties/role/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {const _errs5 = errors;for(const key1 in data1){if(!(((((((key1 === "label") || (key1 === "baseAttributes")) || (key1 === "attributeChanges")) || (key1 === "skillsByLevel")) || (key1 === "baseline")) || (key1 === "roleSkills")) || (key1 === "customizations"))){validate28.errors = [{instancePath:instancePath+"/role",schemaPath:"#/properties/role/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs5 === errors){if(data1.label !== undefined){const _errs6 = errors;if(typeof data1.label !== "string"){validate28.errors = [{instancePath:instancePath+"/role/label",schemaPath:"#/properties/role/properties/label/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid1 = _errs6 === errors;}else {var valid1 = true;}if(valid1){if(data1.baseAttributes !== undefined){let data3 = data1.baseAttributes;const _errs8 = errors;if(errors === _errs8){if(data3 && typeof data3 == "object" && !Array.isArray(data3)){let missing2;if(((((data3.dex === undefined) && (missing2 = "dex")) || ((data3.ins === undefined) && (missing2 = "ins"))) || ((data3.mig === undefined) && (missing2 = "mig"))) || ((data3.wlp === undefined) && (missing2 = "wlp"))){validate28.errors = [{instancePath:instancePath+"/role/baseAttributes",schemaPath:"#/properties/role/properties/baseAttributes/required",keyword:"required",params:{missingProperty: missing2},message:"must have required property '"+missing2+"'"}];return false;}else {const _errs10 = errors;for(const key2 in data3){if(!((((key2 === "dex") || (key2 === "ins")) || (key2 === "mig")) || (key2 === "wlp"))){validate28.errors = [{instancePath:instancePath+"/role/baseAttributes",schemaPath:"#/properties/role/properties/baseAttributes/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key2},message:"must NOT have additional properties"}];return false;break;}}if(_errs10 === errors){if(data3.dex !== undefined){let data4 = data3.dex;const _errs11 = errors;if(!((((data4 === "d6") || (data4 === "d8")) || (data4 === "d10")) || (data4 === "d12"))){validate28.errors = [{instancePath:instancePath+"/role/baseAttributes/dex",schemaPath:"#/$defs/AttributeDice/enum",keyword:"enum",params:{allowedValues: schema16.enum},message:"must be equal to one of the allowed values"}];return false;}var valid2 = _errs11 === errors;}else {var valid2 = true;}if(valid2){if(data3.ins !== undefined){let data5 = data3.ins;const _errs13 = errors;if(!((((data5 === "d6") || (data5 === "d8")) || (data5 === "d10")) || (data5 === "d12"))){validate28.errors = [{instancePath:instancePath+"/role/baseAttributes/ins",schemaPath:"#/$defs/AttributeDice/enum",keyword:"enum",params:{allowedValues: schema16.enum},message:"must be equal to one of the allowed values"}];return false;}var valid2 = _errs13 === errors;}else {var valid2 = true;}if(valid2){if(data3.mig !== undefined){let data6 = data3.mig;const _errs15 = errors;if(!((((data6 === "d6") || (data6 === "d8")) || (data6 === "d10")) || (data6 === "d12"))){validate28.errors = [{instancePath:instancePath+"/role/baseAttributes/mig",schemaPath:"#/$defs/AttributeDice/enum",keyword:"enum",params:{allowedValues: schema16.enum},message:"must be equal to one of the allowed values"}];return false;}var valid2 = _errs15 === errors;}else {var valid2 = true;}if(valid2){if(data3.wlp !== undefined){let data7 = data3.wlp;const _errs17 = errors;if(!((((data7 === "d6") || (data7 === "d8")) || (data7 === "d10")) || (data7 === "d12"))){validate28.errors = [{instancePath:instancePath+"/role/baseAttributes/wlp",schemaPath:"#/$defs/AttributeDice/enum",keyword:"enum",params:{allowedValues: schema16.enum},message:"must be equal to one of the allowed values"}];return false;}var valid2 = _errs17 === errors;}else {var valid2 = true;}}}}}}}else {validate28.errors = [{instancePath:instancePath+"/role/baseAttributes",schemaPath:"#/properties/role/properties/baseAttributes/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs8 === errors;}else {var valid1 = true;}if(valid1){if(data1.attributeChanges !== undefined){let data8 = data1.attributeChanges;const _errs19 = errors;if(errors === _errs19){if(Array.isArray(data8)){if(data8.length > 3){validate28.errors = [{instancePath:instancePath+"/role/attributeChanges",schemaPath:"#/properties/role/properties/attributeChanges/maxItems",keyword:"maxItems",params:{limit: 3},message:"must NOT have more than 3 items"}];return false;}else {if(data8.length < 3){validate28.errors = [{instancePath:instancePath+"/role/attributeChanges",schemaPath:"#/properties/role/properties/attributeChanges/minItems",keyword:"minItems",params:{limit: 3},message:"must NOT have fewer than 3 items"}];return false;}else {var valid7 = true;const len0 = data8.length;for(let i0=0; i0<len0; i0++){let data9 = data8[i0];const _errs21 = errors;if(errors === _errs21){if(data9 && typeof data9 == "object" && !Array.isArray(data9)){if(Object.keys(data9).length > 1){validate28.errors = [{instancePath:instancePath+"/role/attributeChanges/" + i0,schemaPath:"#/properties/role/properties/attributeChanges/items/maxProperties",keyword:"maxProperties",params:{limit: 1},message:"must NOT have more than 1 properties"}];return false;}else {if(Object.keys(data9).length < 1){validate28.errors = [{instancePath:instancePath+"/role/attributeChanges/" + i0,schemaPath:"#/properties/role/properties/attributeChanges/items/minProperties",keyword:"minProperties",params:{limit: 1},message:"must NOT have fewer than 1 properties"}];return false;}else {const _errs23 = errors;for(const key3 in data9){if(!((((key3 === "dex") || (key3 === "ins")) || (key3 === "mig")) || (key3 === "wlp"))){validate28.errors = [{instancePath:instancePath+"/role/attributeChanges/" + i0,schemaPath:"#/properties/role/properties/attributeChanges/items/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key3},message:"must NOT have additional properties"}];return false;break;}}if(_errs23 === errors){if(data9.dex !== undefined){let data10 = data9.dex;const _errs24 = errors;if(!((((data10 === "d6") || (data10 === "d8")) || (data10 === "d10")) || (data10 === "d12"))){validate28.errors = [{instancePath:instancePath+"/role/attributeChanges/" + i0+"/dex",schemaPath:"#/$defs/AttributeDice/enum",keyword:"enum",params:{allowedValues: schema16.enum},message:"must be equal to one of the allowed values"}];return false;}var valid8 = _errs24 === errors;}else {var valid8 = true;}if(valid8){if(data9.ins !== undefined){let data11 = data9.ins;const _errs26 = errors;if(!((((data11 === "d6") || (data11 === "d8")) || (data11 === "d10")) || (data11 === "d12"))){validate28.errors = [{instancePath:instancePath+"/role/attributeChanges/" + i0+"/ins",schemaPath:"#/$defs/AttributeDice/enum",keyword:"enum",params:{allowedValues: schema16.enum},message:"must be equal to one of the allowed values"}];return false;}var valid8 = _errs26 === errors;}else {var valid8 = true;}if(valid8){if(data9.mig !== undefined){let data12 = data9.mig;const _errs28 = errors;if(!((((data12 === "d6") || (data12 === "d8")) || (data12 === "d10")) || (data12 === "d12"))){validate28.errors = [{instancePath:instancePath+"/role/attributeChanges/" + i0+"/mig",schemaPath:"#/$defs/AttributeDice/enum",keyword:"enum",params:{allowedValues: schema16.enum},message:"must be equal to one of the allowed values"}];return false;}var valid8 = _errs28 === errors;}else {var valid8 = true;}if(valid8){if(data9.wlp !== undefined){let data13 = data9.wlp;const _errs30 = errors;if(!((((data13 === "d6") || (data13 === "d8")) || (data13 === "d10")) || (data13 === "d12"))){validate28.errors = [{instancePath:instancePath+"/role/attributeChanges/" + i0+"/wlp",schemaPath:"#/$defs/AttributeDice/enum",keyword:"enum",params:{allowedValues: schema16.enum},message:"must be equal to one of the allowed values"}];return false;}var valid8 = _errs30 === errors;}else {var valid8 = true;}}}}}}}}else {validate28.errors = [{instancePath:instancePath+"/role/attributeChanges/" + i0,schemaPath:"#/properties/role/properties/attributeChanges/items/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid7 = _errs21 === errors;if(!valid7){break;}}}}}else {validate28.errors = [{instancePath:instancePath+"/role/attributeChanges",schemaPath:"#/properties/role/properties/attributeChanges/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid1 = _errs19 === errors;}else {var valid1 = true;}if(valid1){if(data1.skillsByLevel !== undefined){let data14 = data1.skillsByLevel;const _errs32 = errors;if(errors === _errs32){if(Array.isArray(data14)){if(data14.length > 6){validate28.errors = [{instancePath:instancePath+"/role/skillsByLevel",schemaPath:"#/properties/role/properties/skillsByLevel/maxItems",keyword:"maxItems",params:{limit: 6},message:"must NOT have more than 6 items"}];return false;}else {if(data14.length < 6){validate28.errors = [{instancePath:instancePath+"/role/skillsByLevel",schemaPath:"#/properties/role/properties/skillsByLevel/minItems",keyword:"minItems",params:{limit: 6},message:"must NOT have fewer than 6 items"}];return false;}else {var valid13 = true;const len1 = data14.length;for(let i1=0; i1<len1; i1++){const _errs34 = errors;if(!(validate12(data14[i1], {instancePath:instancePath+"/role/skillsByLevel/" + i1,parentData:data14,parentDataProperty:i1,rootData}))){vErrors = vErrors === null ? validate12.errors : vErrors.concat(validate12.errors);errors = vErrors.length;}var valid13 = _errs34 === errors;if(!valid13){break;}}}}}else {validate28.errors = [{instancePath:instancePath+"/role/skillsByLevel",schemaPath:"#/properties/role/properties/skillsByLevel/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid1 = _errs32 === errors;}else {var valid1 = true;}if(valid1){if(data1.baseline !== undefined){const _errs35 = errors;if(!(validate12(data1.baseline, {instancePath:instancePath+"/role/baseline",parentData:data1,parentDataProperty:"baseline",rootData}))){vErrors = vErrors === null ? validate12.errors : vErrors.concat(validate12.errors);errors = vErrors.length;}var valid1 = _errs35 === errors;}else {var valid1 = true;}if(valid1){if(data1.roleSkills !== undefined){let data17 = data1.roleSkills;const _errs36 = errors;if(errors === _errs36){if(data17 && typeof data17 == "object" && !Array.isArray(data17)){const _errs38 = errors;for(const key4 in data17){if(!(pattern0.test(key4))){validate28.errors = [{instancePath:instancePath+"/role/roleSkills",schemaPath:"#/properties/role/properties/roleSkills/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key4},message:"must NOT have additional properties"}];return false;break;}}if(_errs38 === errors){var valid14 = true;for(const key5 in data17){if(pattern0.test(key5)){const _errs39 = errors;if(!(validate31(data17[key5], {instancePath:instancePath+"/role/roleSkills/" + key5.replace(/~/g, "~0").replace(/\//g, "~1"),parentData:data17,parentDataProperty:key5,rootData}))){vErrors = vErrors === null ? validate31.errors : vErrors.concat(validate31.errors);errors = vErrors.length;}var valid14 = _errs39 === errors;if(!valid14){break;}}}}}else {validate28.errors = [{instancePath:instancePath+"/role/roleSkills",schemaPath:"#/properties/role/properties/roleSkills/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs36 === errors;}else {var valid1 = true;}if(valid1){if(data1.customizations !== undefined){let data19 = data1.customizations;const _errs40 = errors;if(errors === _errs40){if(data19 && typeof data19 == "object" && !Array.isArray(data19)){const _errs42 = errors;for(const key6 in data19){if(!(pattern0.test(key6))){validate28.errors = [{instancePath:instancePath+"/role/customizations",schemaPath:"#/properties/role/properties/customizations/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key6},message:"must NOT have additional properties"}];return false;break;}}if(_errs42 === errors){var valid15 = true;for(const key7 in data19){if(pattern0.test(key7)){const _errs43 = errors;if(!(validate31(data19[key7], {instancePath:instancePath+"/role/customizations/" + key7.replace(/~/g, "~0").replace(/\//g, "~1"),parentData:data19,parentDataProperty:key7,rootData}))){vErrors = vErrors === null ? validate31.errors : vErrors.concat(validate31.errors);errors = vErrors.length;}var valid15 = _errs43 === errors;if(!valid15){break;}}}}}else {validate28.errors = [{instancePath:instancePath+"/role/customizations",schemaPath:"#/properties/role/properties/customizations/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs40 === errors;}else {var valid1 = true;}}}}}}}}}}else {validate28.errors = [{instancePath:instancePath+"/role",schemaPath:"#/properties/role/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs3 === errors;}else {var valid0 = true;}}}}}else {validate28.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate28.errors = vErrors;return errors === 0;}function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(!(data && typeof data == "object" && !Array.isArray(data))){validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}const _errs1 = errors;let valid0 = false;let passing0 = null;const _errs2 = errors;if(!(validate11(data, {instancePath,parentData,parentDataProperty,rootData}))){vErrors = vErrors === null ? validate11.errors : vErrors.concat(validate11.errors);errors = vErrors.length;}var _valid0 = _errs2 === errors;if(_valid0){valid0 = true;passing0 = 0;}const _errs3 = errors;if(!(validate28(data, {instancePath,parentData,parentDataProperty,rootData}))){vErrors = vErrors === null ? validate28.errors : vErrors.concat(validate28.errors);errors = vErrors.length;}var _valid0 = _errs3 === errors;if(_valid0 && valid0){valid0 = false;passing0 = [passing0, 1];}else {if(_valid0){valid0 = true;passing0 = 1;}}if(!valid0){const err0 = {instancePath,schemaPath:"#/oneOf",keyword:"oneOf",params:{passingSchemas: passing0},message:"must match exactly one schema in oneOf"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;validate10.errors = vErrors;return false;}else {errors = _errs1;if(vErrors !== null){if(_errs1){vErrors.length = _errs1;}else {vErrors = null;}}}validate10.errors = vErrors;return errors === 0;}